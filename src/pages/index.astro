---

import Layout from '../layouts/Layout.astro';
import NailPolishCard from '../components/NailPolishCard.astro';
import SearchBar from '../components/SearchBar.astro';
import { NAILPOLISH } from '../consts/nail-polish';

const listOfNailPolish = NAILPOLISH.map(nailpolish => {
    return { ... nailpolish }
})

const isColorLight = (rgbColor: string) => {
  const rgb = rgbColor.match(/\d+/g);
  if (!rgb || rgb.length !== 3) return true;
            
  const r = parseInt(rgb[0]);
  const g = parseInt(rgb[1]);
  const b = parseInt(rgb[2]);
            
  const brightness = (r * 299 + g * 587 + b * 114) / 1000;
  return brightness > 128;
};


---

<Layout title="Mi Colección de Esmaltes">
  <main class="min-h-screen bg-gray-50 p-4 pb-20">
    <!-- Header con saludo y notificaciones -->
    <header class="flex justify-between items-center mb-6">
      <div>
        <h1 class="text-2xl font-bold">¡Hola Andrea!</h1>
        <p class="text-gray-600">{`Tienes ${NAILPOLISH.length} esmaltes 💅🏼`}</p>
      </div>
    </header>

    <!-- Barra de búsqueda -->
    <SearchBar />
    

    <div class="grid grid-rows-1 grid-flow-col overflow-x-auto pt-6 gap-2 hide-scroll">
      {
        listOfNailPolish.map(polish => {
          const textColor = isColorLight(polish.color) ? 'text-black' : 'text-white';
          const svgFilter = isColorLight(polish.color) ? '' : 'invert brightness-0 contrast-100';
        
        return (
        <NailPolishCard id={polish.id} name={polish.name} brand={polish.brand} level={polish.level} color={polish.color} feature={polish.feature} text={textColor} svg={svgFilter}/>
        )
      })}
    </div>


  </main>

</Layout>

<style>
  .hide-scroll::-webkit-scrollbar {
    display: none;
}
</style>
